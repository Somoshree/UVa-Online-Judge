#Accepted solution by UVa OJ in 0.01secs.

#include <iostream>
#include <string>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
using namespace std;
bool checkforanagram(string str,string s)
{
    vector<int> hash(255,0);
    for(int i=0;i<str.length();++i)
    {
        if(str[i]!=' ')
            ++hash[str[i]];
    }
    for(int i=0;i<s.length();++i)
    {
        if(s[i]!=' ' && hash[s[i]]>0)
            --hash[s[i]];
        else if(s[i]!=' ')
            return false;
    }
    for(int i=0;i<255;++i)
    {
        if(hash[i]!=0)
            return false;
    }
    return true;
}
int main() {
    string str;
    long int T;
    cin>>T;
    cin.ignore(1,'\n');
    char ch;
    cin.get(ch);
    while(T--)
    {
        multimap<string,set<string>> m;
        set<string> s;
        while(getline(cin,str) && !str.empty())
            m.insert(pair<string,set<string>>(str,s));
        map<string,set<string>>::iterator itr1,itr2;
        for(itr1=m.begin();itr1!=m.end();++itr1)
        {
            for(itr2=m.begin();itr2!=m.end();++itr2)
            {
                if(distance(m.begin(),itr2)<=distance(m.begin(),itr1))
                    continue;
                if(checkforanagram(itr1->first,itr2->first))
                    (itr1->second).insert(itr2->first);
            }
        }
        set<string>::iterator itr;
        for(itr1=m.begin();itr1!=m.end();++itr1)
        {
            set<string> sets=itr1->second;
            for(itr=sets.begin();itr!=sets.end();++itr)
                cout<<itr1->first<<" = "<<*itr<<endl;
        }
        if(cin.good())
            cout<<endl;
    }
	return 0;
}
